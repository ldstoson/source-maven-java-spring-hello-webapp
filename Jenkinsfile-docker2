pipeline {
  agent none

  stages {
    stage('Checkout') {
      agent any
      steps {
        git branch: 'main', url: 'https://github.com/ldstoson/source-maven-java-spring-hello-webapp'
      }
    }
    stage('Build') {
      agent {
        docker { image 'maven:3-openjdk-11' }
      }
      steps {
        sh 'mvn clean package -DskipTests=true'
      }
    }
    stage('Test') {
      agent {
        docker { image 'maven:3-openjdk-11' }
      }
      steps {
        sh 'mvn test'
      }
    }
    stage('Build Docker Image') {
      agent any
      steps {
        sh 'docker image build -t myhello .'
      }
    }
    stage('Tag Docker Image') {
      agent any
      steps {
        sh 'docker image tag myhello ldstoson/myhello:$BUILD_NUMBER'
        sh 'docker image tag myhello ldstoson/myhello:latest'
      }
    }
    stage('Publish Docker Image') {
      agent any
      steps {
        withDockerRegistry(credentialsId: 'docker-hub-token', url: 'https://index.docker.io/v1/') {
          sh 'docker image push ldstoson/myhello:$BUILD_NUMBER'
	  sh 'docker image push ldstoson/myhello:latest'
        }
      }
    }
    stage('Run Docker Container') {
      agent {
        docker { image 'docker:dind' }
      }
      steps {
        script {
          def containerName = 'myhello'
          def dockerHost = 'tcp://172.31.17.35:2375'

          // Check if the container is running
          def isContainerRunning = sh(script: "docker -H $dockerHost ps -q -f name=$containerName", returnStatus: true) == 0
	
          // If the container is running, stop and remove it
          if (isContainerRunning) {
            echo "Stopping and removing existing container: $containerName"
            sh "docker -H $dockerHost container stop $containerName"
            sh "docker -H $dockerHost container rm $containerName"
          } else {
            echo "No existing container found with the name: $containerName"
          }
          sh 'docker -H tcp://172.31.17.35:2375 container run --detach --name myhello -p 80:8080 ldstoson/myhello:$BUILD_NUMBER'
        }
      }
    }
  }
}
